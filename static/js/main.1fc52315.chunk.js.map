{"version":3,"sources":["components/header/Header.js","components/Input/Input.js","components/Button/Button.js","components/TaskHeader/TasksHeader.js","components/Note/Note.js","components/TaskList/TasksList.js","components/TasksFooter/TasksFooter.js","components/MainApp/MainApp.js","components/footer/Footer.js","App.js","index.js"],"names":["Header","Input","value","onChange","handleAddNote","type","e","target","className","placeholder","onKeyPress","key","Button","children","inputText","onClick","TasksHeader","useState","setInputText","Note","note","removeTask","toggleComplete","checked","isComplete","id","text","size","TasksList","notes","map","TasksFooter","pendingTasks","reduce","acc","totalTasks","setText","length","init_notes","uniqid","MainApp","setNotes","newNote","newNotesList","noteId","filteredNotes","filter","task","find","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fc52315.chunk.js","sourcesContent":["function Header() {\n  return <div>ToDos-App</div>;\n}\n\nexport default Header;\n","import \"./Input.css\";\n\nfunction Input({ value, onChange, handleAddNote }) {\n  function handleInputChange(e) {\n    onChange(e.target.value);\n  }\n\n  function onEnterKeyPress(e) {\n    if (e.key === \"Enter\") {\n      handleAddNote(value);\n    }\n  }\n\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      onChange={handleInputChange}\n      className=\"input\"\n      placeholder=\"Add Task...\"\n      onKeyPress={onEnterKeyPress}\n    />\n  );\n}\n\nexport default Input;\n","import \"./Button.css\";\n\nfunction Button({ children, handleAddNote, inputText }) {\n  return (\n    <button className=\"btn\" onClick={() => handleAddNote(inputText)}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import \"./TasksHeader.css\";\nimport { useState } from \"react\";\nimport Input from \"./../Input/Input\";\nimport Button from \"./../Button/Button\";\n\nfunction TasksHeader({ handleAddNote }) {\n  const [inputText, setInputText] = useState(\"\");\n\n  function handleInputChange(value) {\n    setInputText(value);\n  }\n\n  return (\n    <header className=\"TodoHeader\">\n      <Input\n        value={inputText}\n        onChange={handleInputChange}\n        handleAddNote={handleAddNote}\n      />\n      <Button handleAddNote={handleAddNote} inputText={inputText}>\n        Add\n      </Button>\n    </header>\n  );\n}\n\nexport default TasksHeader;\n","import \"./Note.css\";\nimport { BiTrash } from \"react-icons/all\";\n\nfunction Note({ note, removeTask, toggleComplete }) {\n  return (\n    <div className=\"Note\">\n      <div>\n        <input\n          type=\"checkbox\"\n          checked={note.isComplete}\n          onChange={() => toggleComplete(note.id)}\n        />\n        <span className={note.isComplete ? \"complete\" : \"\"}>{note.text}</span>\n      </div>\n      <button className=\"rm-btn\" onClick={() => removeTask(note.id)}>\n        <BiTrash size=\"1.5em\" />\n      </button>\n    </div>\n  );\n}\n\nexport default Note;\n","import Note from \"./../Note/Note\";\nimport \"./TasksList.css\";\n\nfunction TasksList({ notes, removeTask, toggleComplete }) {\n  return (\n    <section className=\"TodoBody\">\n      {notes.map((note) => (\n        <Note\n          key={note.id}\n          note={note}\n          removeTask={removeTask}\n          toggleComplete={toggleComplete}\n        />\n      ))}\n    </section>\n  );\n}\n\nexport default TasksList;\n","function TasksFooter({ notes }) {\n  const pendingTasks = notes.reduce(\n    (acc, note) => (note.isComplete ? acc : acc + 1),\n    0\n  );\n  const text = setText(notes.length, pendingTasks);\n\n  return <footer>{text}</footer>;\n}\n\nexport default TasksFooter;\n\nfunction setText(totalTasks, pendingTasks) {\n  if (totalTasks === 0) {\n    return \"There are no tasks.\";\n  } else if (pendingTasks === 0) {\n    return \"No tasks to do !\";\n  } else {\n    return `${pendingTasks} pending tasks out of ${totalTasks} to do.`;\n  }\n}\n","import TasksHeader from \"../TaskHeader/TasksHeader\";\nimport TasksList from \"../TaskList/TasksList\";\nimport TasksFooter from \"../TasksFooter/TasksFooter\";\nimport \"./MainApp.css\";\nimport { useState } from \"react\";\nimport uniqid from \"uniqid\";\n\nconst init_notes = [\n  {\n    id: uniqid(),\n    text: \"note1\",\n    isComplete: true,\n  },\n  {\n    id: uniqid(),\n    text: \"note2\",\n    isComplete: true,\n  },\n  {\n    id: uniqid(),\n    text: \"note3\",\n    isComplete: false,\n  },\n];\n\nfunction MainApp() {\n  const [notes, setNotes] = useState(init_notes);\n\n  function handleAddNote(text) {\n    if (text.length >= 3) {\n      const newNote = {\n        id: uniqid(),\n        text: text,\n        isComplete: false,\n      };\n      const newNotesList = [...notes, newNote];\n      setNotes(newNotesList);\n    }\n  }\n\n  function removeTask(noteId) {\n    const filteredNotes = notes.filter((note) => note.id !== noteId);\n    setNotes(filteredNotes);\n  }\n\n  function toggleComplete(noteId) {\n    const task = notes.find((note) => note.id === noteId);\n    task.isComplete = !task.isComplete;\n    setNotes([...notes]);\n  }\n\n  return (\n    <div className=\"MainApp\">\n      <TasksHeader handleAddNote={handleAddNote} />\n      <TasksList\n        notes={notes}\n        removeTask={removeTask}\n        toggleComplete={toggleComplete}\n      />\n      <TasksFooter notes={notes} />\n    </div>\n  );\n}\n\nexport default MainApp;\n","function Footer() {\n  return <div></div>;\n}\n\nexport default Footer;\n","import \"./App.css\";\nimport Header from \"./components/header/Header\";\nimport MainApp from \"./components/MainApp/MainApp\";\nimport Footer from \"./components/footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainApp />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}